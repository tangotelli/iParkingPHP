name: Tests
on: [push]
jobs:
  php-unit-and-functional-tests:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      matrix:
        php-versions: [ '8.0' ]
    services:
      mongo:
        image: mongo
        env:
          MONGO_INITDB_DATABASE: iparking_test
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017
    steps:
      # —— Setup Github actions —————————————————————————————————————————————
      # https://github.com/actions/checkout (official)
      - name: Git checkout placeholder-service
        uses: actions/checkout@v2
      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP with Xdebug
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: xdebug
          tools: composer:v2
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
        env:
          update: true
      - name: Check PHP Version
        run: php -v
      # —— Composer —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install
      # —— Symfony ——————————————————————————————————————————————————————————
      - name: Check Symfony requirements
        run: vendor/bin/requirements-checker
      - name: Check the Symfony console
        run: php bin/console -V
      # —— Code style —— (Based on this package: https://github.com/OskarStark/php-cs-fixer-ga)
      #- name: PHP-CS-Fixer
      #  uses: docker://oskarstark/php-cs-fixer-ga
      #  with:
      #    args: --config=.php_cs.dist --diff --dry-run
      ## —— Tests ———————————————————————————————————————————————————————————
      # - name: Run functional and unit tests
      #   run: composer test
      - name: Run tests with phpunit/phpunit
        run: vendor/bin/phpunit
        --coverage-clover=coverage.xml

      - name: Fix code coverage paths
        run: sed -i
      's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage.xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}